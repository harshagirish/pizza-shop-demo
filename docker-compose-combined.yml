version: "3"
services:
  mysql:
    image: mysql/mysql-server:8.0.27
    hostname: mysql
    container_name: mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    volumes:
      - ./mysql/mysql.cnf:/etc/mysql/conf.d
      - ./mysql/mysql_bootstrap.sql:/docker-entrypoint-initdb.d/mysql_bootstrap.sql
      - ./mysql/data:/var/lib/mysql-files/data
  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TOOLS_LOG4J_LOGLEVEL: ERROR
    depends_on:
      [zookeeper]
    healthcheck: {test: nc -z localhost 9092, interval: 1s}
  orders-service:
    build: orders-service
    restart: unless-stopped
    container_name: orders-service
    depends_on:
      - mysql
      - kafka
    environment:
      - MYSQL_SERVER=mysql
      - KAFKA_BROKER_HOSTNAME=kafka
      - KAFKA_BROKER_PORT=9092
  pinot-controller:
    image: apachepinot/pinot:0.11.0
    command: "StartController -zkAddress zookeeper:2181"
    container_name: "pinot-controller"
    restart: unless-stopped
    ports:
      - "9000:9000"
    depends_on:
      - zookeeper
    healthcheck: {test: nc -z localhost 9000, interval: 1s}
  pinot-broker:
    image: apachepinot/pinot:0.11.0
    command: "StartBroker -zkAddress zookeeper:2181"
    restart: unless-stopped
    container_name: "pinot-broker"
    ports:
      - "8099:8099"
    depends_on:
      - pinot-controller
  pinot-server:
    image: apachepinot/pinot:0.11.0
    container_name: "pinot-server"
    command: "StartServer -zkAddress zookeeper:2181"
    restart: unless-stopped
    depends_on:
      - pinot-broker
  pinot-add-table:
    image: apachepinot/pinot:0.11.0
    container_name: "pinot-add-table"
    volumes:
      - ./pinot/config:/config
      - ./scripts/:/scripts
    command: "/scripts/add_tables.sh"
    restart: on-failure
    entrypoint: "bash -c"
    environment:
    - "JAVA_OPTS=-Dpinot.admin.system.exit=true"
    depends_on:
      - pinot-controller
  dashboard-enriched:
    build: streamlit
    restart: unless-stopped
    container_name: dashboard-enriched
    ports:
      - "8502:8501"
    depends_on:
      - pinot-controller
    volumes:
      - ./streamlit/app_enriched.py:/workdir/app.py
    environment:
      - PINOT_SERVER
      - PINOT_PORT
  kafka-streams:
    build: kafka-streams
    restart: unless-stopped
    container_name: kafka-streams
    environment:
      - BOOTSTRAP_SERVER=kafka:9092
      - ORDERS_TOPIC=orders
      - PRODUCTS_TOPIC=products
      - ENRICHED_ORDERS_TOPIC=enriched-order-items
    depends_on:
      - kafka
